Step 1 - Install dependencies
-----------------------------
I created the package.json like this:
* npm init -y

I then installed dependencies like this:
* npm install webpack --save-dev
* npm install babel-core babel-loader babel-preset-es2015 --save-dev

Step 2 - Build configuration
----------------------------
I copied the minimal webpack.config.js from the below article
* https://www.sitepoint.com/beginners-guide-to-webpack-2-and-module-bundling

I then made these edits:
* I set babel-polyfill as the entry point
* Added the modules resolve section

Step 3 - Execution
------------------
I edited package.json to set the main path to src/logic/app.js
I then set the scripts section to use webpack to watch and rebuild JS files into spa.bundle.min.js when edited

Run 'npm start' to watch web files
The -p option in the webpack command in package.json turns minification on

Step 4 - Deployment
------------------
Deploy index.html and the css/dist/lib folders to your web server
We can use the node API to serve web content

OIDC CLIENT CUSTOM BUILD
------------------------
I used the OIDC Client library in a global namespace so that OIDC files were not included in my own bundle file.

Run these commands as documented on the site:
* git clone https://github.com/IdentityModel/oidc-client-js.git
* cd oidc-client-js
* npm install

In gulpfile.js I removed babel-polyfill from the dist builds, to avoid conflicts with my own code:
* var classicEntry = [npmEntry];

Run this commands and then copy the dist files to my project:
* npm run build
